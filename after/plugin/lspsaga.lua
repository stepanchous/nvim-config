-- local saga_status, saga = pcall(require, "lspsaga")
-- if not saga_status then
-- 	return
-- end
--
-- saga.setup({
-- 	-- keybinds for navigation in lspsaga window
-- 	scroll_preview = { scroll_down = "<C-f>", scroll_up = "<C-b>" },
-- 	-- use enter to open file with definition preview
-- 	definition = {
-- 		edit = "<CR>",
-- 	},
-- 	ui = {
-- 		colors = {
-- 			normal_bg = "#022746",
-- 		},
-- 	},
-- })
--
-- local keymap = vim.keymap.set
--
-- -- LSP finder - Find the symbol's definition
-- -- If there is no definition, it will instead be hidden
-- -- When you use an action in finder like "open vsplit",
-- -- you can use <C-t> to jump back
-- keymap("n", "gh", "<cmd>Lspsaga lsp_finder<CR>")
--
-- -- Code action
-- keymap({ "n", "v" }, "<leader>ca", "<cmd>Lspsaga code_action<CR>")
--
-- -- Rename all occurrences of the hovered word for the entire file
-- keymap("n", "rn", "<cmd>Lspsaga rename<CR>")
--
-- -- Rename all occurrences of the hovered word for the selected files
-- keymap("n", "rn", "<cmd>Lspsaga rename ++project<CR>")
--
-- -- Peek definition
-- -- You can edit the file containing the definition in the floating window
-- -- It also supports open/vsplit/etc operations, do refer to "definition_action_keys"
-- -- It also supports tagstack
-- -- Use <C-t> to jump back
-- keymap("n", "gd", "<cmd>Lspsaga peek_definition<CR>")
--
-- keymap("n", "gd", "<cmd>Lspsaga goto_definition<CR>")
--
-- keymap("n", "gt", "<cmd>Lspsaga peek_type_definition<CR>")
-- keymap("n", "gt", "<cmd>Lspsaga goto_type_definition<CR>")
--
-- keymap("n", "<leader>sl", "<cmd>Lspsaga show_line_diagnostics<CR>")
--
-- keymap("n", "<leader>sc", "<cmd>Lspsaga show_cursor_diagnostics<CR>")
--
-- keymap("n", "<leader>sb", "<cmd>Lspsaga show_buf_diagnostics<CR>")
--
-- keymap("n", "[e", "<cmd>Lspsaga diagnostic_jump_prev<CR>")
-- keymap("n", "]e", "<cmd>Lspsaga diagnostic_jump_next<CR>")
--
-- keymap("n", "[E", function()
-- 	require("lspsaga.diagnostic"):goto_prev({ severity = vim.diagnostic.severity.ERROR })
-- end)
-- keymap("n", "]E", function()
-- 	require("lspsaga.diagnostic"):goto_next({ severity = vim.diagnostic.severity.ERROR })
-- end)
--
-- keymap("n", "K", "<cmd>Lspsaga hover_doc<CR>")
--
-- keymap("n", "K", "<cmd>Lspsaga hover_doc ++keep<CR>")
-- keymap("n", "<Leader>ci", "<cmd>Lspsaga incoming_calls<CR>")
-- keymap("n", "<Leader>co", "<cmd>Lspsaga outgoing_calls<CR>")
-- keymap({ "n", "t" }, "<A-d>", "<cmd>Lspsaga term_toggle<CR>")
